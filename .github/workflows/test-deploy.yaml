name: Deploy para ambiente de test

on:
  push:
    branches:
      - master
    paths:
      - 'src/**'
      - 'docker-compose.yaml'
  workflow_dispatch:

jobs:
  build-and-push-image:
    name: Build e Push da Imagem
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/qualifica-api:v${{ github.run_number }}
            ${{ secrets.DOCKER_USERNAME }}/qualifica-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  get-server-ssh-key:
    name: Pegar a chave SSH do servidor
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: 'us-east-1'
      AWS_EC2_METADATA_DISABLED: 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.3

      - name: Retrieve SSH key and server IP
        id: define-variables
        run: |
          cd terraform

          terraform init

          terraform apply -refresh-only -auto-approve -target=aws_instance.qualificamais_server

          terraform output -raw server_private_key > server_key.pem
          terraform output -raw server_public_ip_address > server_ip.txt

      - name: Upload credentials as artifact
        uses: actions/upload-artifact@v4
        with:
          name: server-credentials
          path: |
            terraform/server_key.pem
            terraform/server_ip.txt
          retention-days: 1

  deploy:
    name: Deploy da aplicação
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs: [get-server-ssh-key, build-and-push-image]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download server credentials artifact
        uses: actions/download-artifact@v4
        with:
          name: server-credentials

      - name: Read and mask credentials from files
        id: read-credentials
        run: |
          KEY_CONTENT=$(cat server_key.pem)
          IP_CONTENT=$(cat server_ip.txt)

          while IFS= read -r line; do
            if [[ -n "$line" ]]; then
              echo "::add-mask::$line"
            fi
          done <<< "$KEY_CONTENT"

          {
            echo 'server_key<<EOF'
            echo "$KEY_CONTENT"
            echo 'EOF'
          } >> $GITHUB_OUTPUT

          echo "server_ip=$IP_CONTENT" >> $GITHUB_OUTPUT

          echo "::add-mask::$KEY_CONTENT"
          echo "::add-mask::$IP_CONTENT"

      - name: Copy docker-compose file
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ steps.read-credentials.outputs.server_ip }}
          username: admin
          key: ${{ steps.read-credentials.outputs.server_key }}
          source: "docker-compose.yaml"
          target: "/home/admin/qualificamais-api"

      - name: Configure docker and start application
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ steps.read-credentials.outputs.server_ip }}
          username: admin
          key: ${{ steps.read-credentials.outputs.server_key }}
          script: |
            sudo apt-get install ca-certificates curl -y
            sudo install -m 0755 -d /etc/apt/keyrings
            sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
            sudo chmod a+r /etc/apt/keyrings/docker.asc

            echo \
              "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
              $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
              sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            sudo apt-get update

            sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y

            mkdir -p /home/admin/qualificamais-api
            cd /home/admin/qualificamais-api
            echo "${{ secrets.DOTENV_CONTENT }}" > .env
            echo "${{ secrets.DOCKER_PASSWORD }}" | sudo docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            sudo docker compose up --pull always -d

  enviar-mensagem:
    name: Enviar mensagem
    needs: [deploy]
    if: ${{ success() }}
    runs-on: ubuntu-latest
    steps:
      - name: Send message
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DEPLOY_CHANNEL_DISCORD_WEBHOOK }}
        with:
          args: |
            ## :package: Novo Deployment para o ambiente de **Test**
            > ✦ **Versão da imagem:** ${{ github.run_number }}
            > ✦ **Link:** https://api.test.qualificamais.app.br/
            > ✦ **Autor:** **${{ github.actor }}**
